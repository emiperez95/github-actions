name: 'Coverage Badge'
description: 'Updates a coverage badge using BYOB (Bring Your Own Badge) - only works with public repositories'
author: 'emiperez95'

inputs:
  coverage-file:
    description: 'Path to the coverage JSON file'
    required: false
    default: 'coverage.json'
  badge-label:
    description: 'Label text for the badge'
    required: false
    default: 'Coverage'
  badge-name:
    description: 'Name identifier for the badge (used internally by BYOB)'
    required: false
    default: 'coverage'

outputs:
  coverage-percentage:
    description: 'The extracted coverage percentage'
  badge-color:
    description: 'The determined badge color based on coverage'
  badge-url:
    description: 'The BYOB URL for the badge'

runs:
  using: 'composite'
  steps:
    - name: Extract coverage percentage and determine color
      id: coverage
      shell: bash
      run: |
        python -c "
        import json
        import os
        import sys
        
        try:
            # Read coverage data
            with open('${{ inputs.coverage-file }}') as f:
                data = json.load(f)
            
            coverage = float(data['totals']['percent_covered_display'])
            
            # Determine color based on coverage
            if coverage >= 90:
                color = 'brightgreen'
            elif coverage >= 80:
                color = 'green'
            elif coverage >= 70:
                color = 'yellowgreen'
            elif coverage >= 60:
                color = 'yellow'
            elif coverage >= 50:
                color = 'orange'
            else:
                color = 'red'
            
            # Write to GitHub outputs
            with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
                f.write(f'coverage={coverage}\n')
                f.write(f'color={color}\n')
                f.write(f'badge-url=https://byob.yarr.is/{os.environ[\"GITHUB_REPOSITORY\"]}/${{ inputs.badge-name }}\n')
            
            print(f'Coverage: {coverage}%')
            print(f'Color: {color}')
            
        except FileNotFoundError:
            print(f'Error: Coverage file \"${{ inputs.coverage-file }}\" not found')
            sys.exit(1)
        except KeyError as e:
            print(f'Error: Missing key in coverage data: {e}')
            sys.exit(1)
        except Exception as e:
            print(f'Error processing coverage data: {e}')
            sys.exit(1)
        "

    - name: Update Coverage Badge with BYOB
      uses: RubbaBoy/BYOB@v1.3.0
      with:
        NAME: ${{ inputs.badge-name }}
        LABEL: ${{ inputs.badge-label }}
        STATUS: '${{ steps.coverage.outputs.coverage }}%'
        COLOR: ${{ steps.coverage.outputs.color }}
        GITHUB_TOKEN: ${{ github.token }}

branding:
  icon: 'shield'
  color: 'green'